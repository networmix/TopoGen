[build-system]
requires = ["setuptools>=77", "wheel"]
build-backend = "setuptools.build_meta"

# ---------------------------------------------------------------------
[project]
name = "topogen"
version = "0.1.0"
description = "A network topology generator."
readme = "README.md"
authors = [{ name = "Andrey Golovanov" }]
license = { text = "MIT" }
requires-python = ">=3.11"

classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
]

# Runtime deps
dependencies = [
    "pyyaml",
    "pandas",
    "matplotlib",
    "nbformat",
    "nbconvert",
    "ipykernel",
    "itables",
    # Geographic processing
    "rasterio",
    "pyproj",
    "geopandas",
    "shapely",
    "scikit-learn",
    "networkx",
    "contextily",
    # NetGraph validation
    "ngraph",
]

# Dev / CI extras
[project.optional-dependencies]
dev = [
    # testing
    "pytest>=8",
    "pytest-cov",
    "pytest-benchmark",
    "pytest-mock",
    "pytest-timeout",
    # docs
    "mkdocs-material",
    "pdoc",
    # style + type checking
    "ruff==0.11.13",
    "pyright",
    # type stubs
    "pandas-stubs",
    # pre-commit hooks
    "pre-commit",
    # build
    "build",
    # publishing
    "twine",

]

[project.scripts]
topogen = "topogen.cli:main"

# ---------------------------------------------------------------------
# Pytest flags
[tool.pytest.ini_options]
addopts = "--cov=./topogen --cov-fail-under=30 --cov-report term-missing --benchmark-disable-gc --benchmark-min-rounds=5 --benchmark-warmup=on"
timeout = 30
markers = [
    "slow: marks integration tests as slow (deselect with '-m \"not slow\"')",
    "benchmark: marks tests as performance benchmarks (run with '-m benchmark')",
]

# ---------------------------------------------------------------------
# Coverage configuration
[tool.coverage.run]
source = ["."]
omit = ["*/tests/*", "*/test_*", "*/conftest.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

# ---------------------------------------------------------------------
# Package discovery
[tool.setuptools.packages.find]
include = ["topogen*"]
exclude = ["tests*", "notebooks*", "examples*", "dev*"]

# ---------------------------------------------------------------------
# Ruff
[tool.ruff]
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "B", "I"] # core + Bugbear + isort
ignore = ["E501"]                          # long lines handled by formatter
fixable = ["ALL"]

[tool.ruff.lint.isort]
known-first-party = ["topogen"]

[tool.ruff.format]
quote-style = "double"
skip-magic-trailing-comma = false

# ---------------------------------------------------------------------
# Pyright / Pylance
[tool.pyright]
typeCheckingMode = "standard" # balanced level
pythonVersion = "3.11"
exclude = [
    "tests/**",          # tests often use dynamic patterns
    "**/venv/**",        # virtual environments (generic)
    "**/*venv/**",       # virtual environments (various naming)
    "build/**",          # build artifacts
    "dist/**",           # distribution files
    "**/__pycache__/**", # Python cache files
    "**/*.egg-info/**",  # egg info directories
]
reportMissingTypeStubs = "warning"
reportUnknownMemberType = "none"
reportUnknownVariableType = "none"
reportUnknownArgumentType = "none"
